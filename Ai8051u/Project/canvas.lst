C251 COMPILER V5.60.0,  canvas                                                             27/11/24  19:44:34  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE canvas
OBJECT MODULE PLACED IN ..\obj\canvas.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\USER\canvas.c XSMALL INTR2 BROWSE INCDIR(..\GUI;..\LCD;..\sys;..\to
                    -uch;..\USER;..\TinyMaix;TinyMaix;..\font;.;..\TinyMaix) DEBUG PRINT(.\canvas.lst) TABS(2) OBJECT(..\obj\canvas.obj) 

stmt  level    source

    1          #include "sys.h"
    2          #include "Ai.h"
    3          #include "canvas.h"
    4          
    5          extern uint8_t xdata input_image[IMAGE_WIDTH * IMAGE_HEIGHT];
    6          uint8_t xdata canvas[CANVAS_HEIGHT * CANVAS_WIDTH] = {0};
    7          
    8          void clean_canvas()
    9          {
   10   1          memset(canvas, 0, CANVAS_HEIGHT * CANVAS_WIDTH * sizeof(canvas[0]));
   11   1      }
   12          
   13          // 给出一个字符在canvas中起始列，分割这个字符,居中放入input_image，保证四边空白部分等宽
   14          bool canvas_process_character(uint32_t start_col, uint32_t end_col)
   15          {
   16   1          uint32_t col, row;
   17   1          uint32_t top_row, bottom_row;
   18   1          uint32_t hor_offset, ver_offset;
   19   1          uint32_t effective_height;
   20   1      
   21   1          // 处理宽度只有一列的情况，区分点和有效字符
   22   1          if (end_col - start_col <= 3)
   23   1          {
   24   2              uint32_t count = 0;
   25   2              for (col = start_col; col <= end_col; col++)
   26   2              {
   27   3                  for (row = 0; row < CANVAS_HEIGHT; row++)
   28   3                  {
   29   4                      if (canvas[row * CANVAS_WIDTH + col] > 0)
   30   4                      {
   31   5                          count++;
   32   5                      }
   33   4                  }
   34   3              }
   35   2      
   36   2              if (count < 10)
   37   2              {
   38   3                  return false; // 认为是干扰点，跳过
   39   3              }
   40   2          }
   41   1      
   42   1          clean_input_image();
   43   1      
   44   1          // 计算水平偏移量
   45   1          hor_offset = (CHAR_IMG_SIZE - (end_col - start_col + 1)) / 2;
   46   1      
   47   1          // 计算有效的字符高度范围
   48   1          top_row = CANVAS_HEIGHT;
   49   1          bottom_row = 0;
   50   1          for (row = 0; row < CANVAS_HEIGHT; row++)
   51   1          {
   52   2              for (col = start_col; col <= end_col; col++)
   53   2              {
   54   3                  if (canvas[row * CANVAS_WIDTH + col] > 0)
   55   3                  {
   56   4                      if (row < top_row)
   57   4                          top_row = row;
   58   4                      if (row > bottom_row)
C251 COMPILER V5.60.0,  canvas                                                             27/11/24  19:44:34  PAGE 2   

   59   4                          bottom_row = row;
   60   4                  }
   61   3              }
   62   2          }
   63   1      
   64   1          // 计算有效字符区域的高度
   65   1          effective_height = bottom_row - top_row + 1;
   66   1      
   67   1          // 计算垂直偏移量（基于有效高度居中）
   68   1          ver_offset = (CHAR_IMG_SIZE - effective_height) / 2;
   69   1      
   70   1          // 分割字符区域并扩展到 28x28 大小，居中处理
   71   1          for (col = start_col; col <= end_col; col++)
   72   1          {
   73   2              for (row = 0; row < CANVAS_HEIGHT; row++)
   74   2              {
   75   3                  if (canvas[row * CANVAS_WIDTH + col] > 0)
   76   3                  {
   77   4                      // 将字符区域扩展到 28x28 大小并居中
   78   4                      uint32_t new_col = col - start_col + hor_offset;
   79   4                      uint32_t new_row = row - top_row + ver_offset;
   80   4      
   81   4                      // 如果字符高度和位置不适合居中，进行调整
   82   4                      if (new_row < 0)
   83   4                      {
   84   5                          new_row = 0;
   85   5                      }
   86   4                      else if (new_row >= CHAR_IMG_SIZE)
   87   4                      {
   88   5                          new_row = CHAR_IMG_SIZE - 1;
   89   5                      }
   90   4      
   91   4                      input_image[new_row * CHAR_IMG_SIZE + new_col] = canvas[row * CANVAS_WIDTH + col];
   92   4                  }
   93   3              }
   94   2          }
   95   1      #if COLLECT_MODE
                   {
                       int xxx;
                       for (xxx = 0; xxx < IMAGE_WIDTH * IMAGE_HEIGHT; xxx++)
                       {
                           printf("%3d,", input_image[xxx]);
                           if (xxx % IMAGE_WIDTH == IMAGE_WIDTH - 1)
                               printf("\r\n");
                       }
                       printf("@\r\n");
                   }
               #endif
  107   1          return true;
  108   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       432     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =      1920     ------
  xdata-const size     =    ------     ------
  edata size           =    ------         16
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
C251 COMPILER V5.60.0,  canvas                                                             27/11/24  19:44:34  PAGE 3   

  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =      1925     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
